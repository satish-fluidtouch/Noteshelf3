//
//  FTDocumentPostProcessOperation.swift
//  Noteshelf
//
//  Created by Matra on 19/11/18.
//  Copyright Â© 2018 Fluid Touch Pte Ltd. All rights reserved.
//

import UIKit

protocol FTPostProcess {
    init(url : Foundation.URL , info : FTDocumentInputInfo);
    func perform(completion : @escaping () -> Void);
}

class FTDocumentPostProcessOperation: NSObject {
    static func operation(info : FTDocumentInputInfo , url: URL) -> FTPostProcess?
    {
        var operation : FTPostProcess?;
        
        if (info.postProcessInfo.documentType == .weeklyPlanner || info.postProcessInfo.documentType == .diary || info.postProcessInfo.documentType == .dailyAndWeeklyPlanner) {
            operation = FTDocumentTypeDairy.init(url: url, info: info)
        } else if (info.postProcessInfo.documentType == .autoGeneratedDiary){
            operation = FTDocumentDigitalDiaryPostOperation.init(url: url, info: info)
        } else if (info.postProcessInfo.documentType == .Digital_Diaries_Midnight) {
            operation = FTDocumentMidnightPostOperation(url: url, info: info)
        } else if (info.postProcessInfo.documentType == .Digital_Diaries_Day_and_Night_Journal){
            operation = FTDocumentFiveMinJournalPostOperation(url: url, info: info)
        }else if (info.postProcessInfo.documentType == .Digital_Diaries_Colorful_Planner){
            operation = FTDocumentPlannerpostOperation(url: url, info: info)
        }
        else if (info.postProcessInfo.documentType == .Digital_Diaries_Colorful_Planner2024){
            operation = FTDocumentPlannerpostOperation(url: url, info: info)
        }
        return operation
    }
}

//To find index of current date for Diaries of type .dailyAndWeeklyPlanner
extension NSCalendar {
    func dayIndex(date:Date) -> Int {
        let calendar = NSCalendar(calendarIdentifier: NSCalendar.Identifier.gregorian)!;
        let currentDate: Date = calendar.date(month: 12, year: 2019)!
        let comp = calendar.components(.day, from: currentDate, to: date, options: [])
        let totalDays = abs(comp.day ?? 0);
        return 76 + totalDays + 1;
    }
//    func date(month : Int, year : Int,day : Int = 1) -> Date?
//    {
//        let calendar = NSCalendar(calendarIdentifier: NSCalendar.Identifier.gregorian)!
//        var currentComponents = DateComponents()
//        currentComponents.year = year
//        currentComponents.day = day
//        currentComponents.month = month
//        currentComponents.weekday = 1
//        currentComponents.hour = 1
//        currentComponents.minute = 0
//        currentComponents.second = 0
//        return calendar.date(from: currentComponents);
//    }
}
